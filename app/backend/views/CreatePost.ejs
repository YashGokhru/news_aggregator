<!DOCTYPE html>
<html>

<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="initial-scale=1, width=device-width" />

  <link rel="stylesheet" href="/styles/createpost_global.css" />
  <link rel="stylesheet" href="/styles/createpost_index.css" />
  <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;700&display=swap" />
</head>

<body>
  <div class="rectangle-parent">
    <img class="frame-child" alt="" src="images/rectangle-9636@2x.png" />
    <img class="crss-1-icon" alt="" src="images/crss-1@2x.png" />

    <form id="createPostForm">
      <input class="frame-item" type="text" name="content" placeholder="Add content...." />
      <input class="frame-child1" type="text" name="title" placeholder="Add title..."  maxlength="270"/>
      <input class="frame-child4" type="text" name="link" placeholder="Add link...." />
      <button class="frame-child2" type="submit">Post</button>
      <div class="frame-child3" id="cancelButton"></div>
      <div class="cancel">Cancel</div>
    </form>

    <div class="header">
      <b class="create-post">Create Post</b>
      <img class="header-child" alt="" src="images/group-1686550876.svg" />
      <button class="noun-profile-665436-1"></button>
      <div class="header-item"></div>
    </div>

    <script>
      document.addEventListener('DOMContentLoaded', function () {
        var createPostForm = document.getElementById('createPostForm');
        var cancelButton = document.getElementById('cancelButton');

        createPostForm.addEventListener('submit', function (event) {
          event.preventDefault(); // Prevent the default form submission

          // Retrieve the input values
          var content = createPostForm.elements['content'].value;
          var title = createPostForm.elements['title'].value;
          var link = createPostForm.elements['link'].value;

          // Check if mandatory fields are filled
          if (!content || !title) {
            alert('Please fill in both "Add content" and "Add title" fields.');
            return;
          }

          // Assuming jwtToken is retrieved from cookies
          var jwtToken = getCookie('jwt'); // Define getCookie function

          fetch('/post/createpost', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json', // Specify the content type as JSON
              'Authorization': 'Bearer ' + jwtToken, // Include the token in the Authorization header
            },
            body: JSON.stringify({ content, title ,link}), // Convert the data to JSON format
          })
            .then(response => response.json())
            .then(data => {
              console.log('Server Response:', data);

              // Handle the server response
              if (data.success) {
                alert('Post created successfully!');
                window.location.href = '/home';
              } else {
                alert(data.message);
                window.location.href = '/home';
              }
            })
            .catch(error => {
              console.error('Error:', error);
              alert('An error occurred. Please try again.');
            });
        });

        cancelButton.addEventListener('click', function () {
          window.location.href = '/home';
        });

        // Function to get the value of a cookie by its name
        function getCookie(name) {
          var match = document.cookie.match(new RegExp('(^| )' + name + '=([^;]+)'));
          if (match) return match[2];
        }
      });
    </script>
  </body>

  </html>
