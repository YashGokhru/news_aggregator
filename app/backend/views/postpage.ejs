<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="initial-scale=1, width=device-width" />
    <title>postpage</title>
    <!-- <link rel="stylesheet" href="./global.css" /> -->
    <link rel="stylesheet" href="./postpage.css" />
    <link
      rel="stylesheet"
      href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;700&display=swap"
    />
  </head>
  <body>
    <div class="post-page" data-animate-on-scroll>
      <div class="post-page-body">
        <div class="cardsfood-card">
          <div class="if-benjamin-netanyahu-led-container">
            <p class="if-benjamin-netanyahu-led">
              If Benjamin Netanyahu-led Israel didn't create Frankenstein's
              monster, it for sure helped.

              if they snubbed us if we just won a final in their country? I think it's what happens when ppl start to think they deserve a win, not that a win needs to be earned and sometimes the other side plays well enough to earn it. 
              if they snubbed us if we just won a final in their country? I think it's what happens when ppl start to think they deserve a win, not that a win needs to be earned and sometimes the other side plays well enough to earn it. 
              if they snubbed us if we just won a final in their country? I think it's what happens when ppl start to think they deserve a win, not that a win needs to be earned and sometimes the other side plays well enough to earn it. 
            </p>
            <p class="if-benjamin-netanyahu-led">&nbsp;</p>
            <p class="if-benjamin-netanyahu-led">
              This is description of post .
            </p>
          </div>
          <div class="username-body">
            <a class="username-xyz">Username - xyz</a>
          </div>
          <div class="rectangle-parent">
            <button class="frame-child"></button>
            <button class="frame-item"></button>
            <button class="frame-inner"></button>
            <div class="div">50</div>
            <div class="div1">50</div>
            <div class="div2">50</div>
          </div>
          <div class="title-body">
            <div class="title-this-container">
              <p class="if-benjamin-netanyahu-led">
                Title - This is title of this news.
              </p>
              <p class="if-benjamin-netanyahu-led">vvbbvdbdfbdb</p>
              <p class="if-benjamin-netanyahu-led">fbdfbfdbfdbdfI don't think we showed any class in defeat. Fans or players. Aussies got snubbed by everyone. Can you imagine the shitstorm in our media if they snubbed us if we just won a final in their country? I think it's what happens when ppl start to think they deserve a win, not that a win needs to be earned and sometimes the other side plays well enough to earn it. </p>
            </div>
          </div>
          






        </div>
      </div>
      <div class="header">
        <a class="home">Home</a>
        <a class="create-post">Create Post</a>
        <a class="search">Search</a>
        <img class="header-child" alt="" src="./public/group-1686550876.svg" />

        <a class="profile-page"> </a>
      </div>
    </div>

    <div class="comments-container" id="comments-container">
      <!-- Generate random comments and replies using JavaScript -->
      <script>
        function generateRandomString(length) {
          const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';
          let result = '';
          for (let i = 0; i < length; i++) {
            result += characters.charAt(Math.floor(Math.random() * characters.length));
          }
          return result;
        }

        function generateRandomComments(parentId, depth, maxDepth) {
          if (depth >= maxDepth) {
            return;
          }

          const numComments = Math.floor(Math.random() * 3) + 1; // Random number of comments (1 to 3)
          const commentsContainer = document.getElementById(parentId);

          for (let i = 0; i < numComments; i++) {
            const commentId = `comment-${generateRandomString(8)}`;
            const replyFormId = `reply-form-${commentId}`;
            const repliesContainerId = `replies-${commentId}`;

            const comment = document.createElement('div');
            comment.className = 'comment';
            comment.id = commentId;
            comment.innerHTML = `
              <div class="comment-header">
                <img class="comment-avatar" src="./public/comment.png" alt="User Avatar" />
                <span class="comment-username">User${i + 1}</span>
              </div>
              <p class="comment-text">This is a random comment (${commentId}).</p>
              <div class="comment-footer">
                <button class="reply-btn" onclick="toggleReplyForm('${replyFormId}')">Reply</button>
                <button class="view-replies-btn" onclick="toggleReplies('${repliesContainerId}')">View Replies</button>
              </div>
              <div class="reply-form" id="${replyFormId}" style="display: none;">
                <textarea class="reply-textarea" placeholder="Type your reply..."></textarea>
                <button class="post-reply-btn" onclick="postReply('${replyFormId}', '${commentId}')">Post</button>
              </div>
              <div class="replies-container" id="${repliesContainerId}" style="display: none;"></div>
            `;

            commentsContainer.appendChild(comment);

            // Recursively generate replies
            generateRandomComments(repliesContainerId, depth + 1, maxDepth);
          }
        }

        // Generate comments and replies
        generateRandomComments('comments-container', 0, 3);
      </script>
    </div>
    <!-- End of nested comments section -->

    </div>
  </div>
</div>
    

    <script>
      var scrollAnimElements = document.querySelectorAll("[data-animate-on-scroll]");
      var observer = new IntersectionObserver(
        (entries) => {
          for (const entry of entries) {
            if (entry.isIntersecting || entry.intersectionRatio > 0) {
              const targetElement = entry.target;
              targetElement.classList.add("animate");
              observer.unobserve(targetElement);
            }
          }
        },
        {
          threshold: 0.15,
        }
      );
      
      for (let i = 0; i < scrollAnimElements.length; i++) {
        observer.observe(scrollAnimElements[i]);
      }

      function toggleReplyForm(formId) {
      // Toggle the visibility of the reply form for the clicked comment
      var replyForm = document.getElementById(formId);
      if (replyForm) {
        replyForm.style.display = replyForm.style.display === 'none' ? 'block' : 'none';
      }
    }

    function toggleReplies(repliesId) {
      // Toggle the visibility of the replies container for the clicked comment
      var repliesContainer = document.getElementById(repliesId);
      if (repliesContainer) {
        repliesContainer.style.display = repliesContainer.style.display === 'none' ? 'block' : 'none';
      }
    }

    function postReply(formId, parentId) {
      // Add your logic to handle posting the reply here
      console.log(`Reply posted for form with ID: ${formId}, parent ID: ${parentId}`);
      // For a real implementation, you would likely send the reply data to a server.

      // For this example, let's add a new comment dynamically
      addComment('new-comment-id', parentId);
    }

    // JavaScript code for upvote and downvote button clicks
document.addEventListener('DOMContentLoaded', function () {
  const upvoteButton = document.querySelector('.frame-child');
  const downvoteButton = document.querySelector('.frame-item');

  upvoteButton.addEventListener('click', function () {
    toggleVoteColor(upvoteButton);
  });

  downvoteButton.addEventListener('click', function () {
    toggleVoteColor(downvoteButton);
  });

  function toggleVoteColor(button) {
    button.classList.toggle('voted');
  }
});
    
      </script>
  </body>
</html>
